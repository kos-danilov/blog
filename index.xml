<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>blog</title>
<link>https://kos-danilov.github.io/</link>
<atom:link href="https://kos-danilov.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>A blog built with Quarto</description>
<generator>quarto-1.8.25</generator>
<lastBuildDate>Fri, 10 Oct 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>ggplot2 for advanced visalization</title>
  <dc:creator>Konstantin Danilov</dc:creator>
  <link>https://kos-danilov.github.io/posts/ggplot2/</link>
  <description><![CDATA[ 





<p>ggplot2 is the best R tool for making charts and graphs. Let’s look at a quick example to see how it works when you make adjustments.</p>
<p>The power of ggplot2 stems from the Grammar of Graphics philosophy, which allows you to build any plot by defining mappings and adding visual components layer by layer. This approach ensures high reproducibility and customization by giving you explicit control over every element. The primary layers of control are:</p>
<ul>
<li><strong>Data &amp; Aesthetics</strong> (aes()): Linking your data variables to visual properties (like position, color, and size).</li>
<li><strong>Geometric Objects</strong> (geom_*): The visible markers (points, bars, lines) that represent the data.</li>
<li><strong>Statistical Transformations</strong> (stat_*): Used to summarize or model the data (e.g., smoothing or counting) before plotting.</li>
<li><strong>Scales</strong> (scale_*): Fine-tunes how the aesthetic mappings are rendered, controlling axis breaks, limits, and color palettes.</li>
<li><strong>Facets</strong> (facet_*): A powerful tool for splitting the visualization into multiple panels for easy group comparisons.</li>
<li><strong>Themes &amp; Coordinates</strong> (theme_*): Controls the non-data appearance (fonts, grid lines) and the plot’s spatial layout.</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kos-danilov.github.io/posts/ggplot2/ggplot2.png" class="img-fluid figure-img"></p>
<figcaption>ggplot2 components</figcaption>
</figure>
</div>
<section id="economist-scatterplot" class="level2">
<h2 class="anchored" data-anchor-id="economist-scatterplot">Economist Scatterplot</h2>
<p>Using following <a href="(https://www.dropbox.com/s/7imn0eoey9ckxh5/data_economist.csv?dl=1)">dataset</a> we can reproduce this figure:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kos-danilov.github.io/posts/ggplot2/economist.png" class="img-fluid figure-img"></p>
<figcaption>The Economist plot</figcaption>
</figure>
</div>
<p>Original code by Raukr. Main components:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">p</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- ggplot<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ec,aes</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>CPI,y=HDI,color=Region<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-2">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">geom_smooth</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">aes</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">fill</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,method=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,formula=y~poly</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x,2</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,se=F,color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,size=0.6</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-3">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">geom_point</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">shape</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>21,size=3,stroke=0.8,fill=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">p</span></span></code></pre></div></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kos-danilov.github.io/posts/ggplot2/plot1.png" class="img-fluid figure-img"></p>
<figcaption>plot1</figcaption>
</figure>
</div>
<p>Text and labels:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">library</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ggrepel</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">library</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">extrafont</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">font_import</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pattern</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gidole"</span>,prompt=FALSE<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">labels</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- c<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Congo"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Afghanistan"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sudan"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Myanmar"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Iraq"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Venezuela"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Russia"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Argentina"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Brazil"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Italy"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"South Africa"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cape Verde"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bhutan"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Botswana"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Britian"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New Zealand"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Greece"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"China"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"India"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rwanda"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Spain"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"France"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"United States"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Japan"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Norway"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Singapore"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Barbados"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Germany"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">p</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- p+geom_text_repel<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>subset<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ec,Country</span> %in% labels<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,aes</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>Country<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-8">                       <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,box.padding=unit<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lines'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,segment.size=0.25,</span></span>
<span id="cb2-9">                       <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">size</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>3,family=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gidole"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">p</span></span></code></pre></div></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kos-danilov.github.io/posts/ggplot2/plot2.png" class="img-fluid figure-img"></p>
<figcaption>plot2</figcaption>
</figure>
</div>
<p>Axes and scale colors:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">p</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- p+scale_x_continuous<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Corruption Perceptions Index, 2011 (10=least corrupt)"</span>,</span>
<span id="cb3-2">                          <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">breaks</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>1:10,limits=c<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1,10</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-3">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">scale_y_continuous</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Human Development Index, 2011 (1=best)"</span>,</span>
<span id="cb3-4">                         <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">breaks</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seq<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">from</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>0,to=1,by=0.1<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,limits=c</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">0.2,1</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb3-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">p</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- p+scale_color_manual<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">values</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>c<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#23576E"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#099FDB"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#29B00E"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#208F84"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#F55840"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#924F3E"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-6">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">scale_fill_manual</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trend"</span>,values=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,labels=expression<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R^2,</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=52%"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)))</span></span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">p</span></span></code></pre></div></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kos-danilov.github.io/posts/ggplot2/plot3.png" class="img-fluid figure-img"></p>
<figcaption>plot3</figcaption>
</figure>
</div>
<p>Title and theme:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">p</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- p+labs<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">title</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Corruption and human development"</span>,</span>
<span id="cb4-2">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">caption</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sources: Transparency International; UN Human Development Report"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb4-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">p</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- p+guides<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>guide_legend<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nrow</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>1<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-4">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">theme_bw</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">base_family</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gidole"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-5">       <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">theme</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">legend.position=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb4-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">p</span></span></code></pre></div></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kos-danilov.github.io/posts/ggplot2/plot4.png" class="img-fluid figure-img"></p>
<figcaption>plot4</figcaption>
</figure>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Sometimes it’s faster and more convenient to post-process vector images after saving them from ggplot2 than to set all the parameters within the R code. However, you can save and reuse “standard” themes by keeping them in a separate R script file.</p>
</div>
</div>
<p>There are many R packages built on top of ggplot2 that simplify visualization tasks while inheriting its core logic. You can find some of them listed <a href="https://exts.ggplot2.tidyverse.org/gallery/">here</a></p>


</section>

 ]]></description>
  <category>R</category>
  <category>ggplot2</category>
  <category>visalization</category>
  <guid>https://kos-danilov.github.io/posts/ggplot2/</guid>
  <pubDate>Fri, 10 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://kos-danilov.github.io/posts/ggplot2/image.png" medium="image" type="image/png" height="166" width="144"/>
</item>
<item>
  <title>Standartised nf-core pipelines</title>
  <dc:creator>Konstantin Danilov</dc:creator>
  <link>https://kos-danilov.github.io/posts/nf_core/</link>
  <description><![CDATA[ 





<p>If you have a common task for NGS data processing - check this out.</p>
<p>In most cases with common data types and analyses, you don’t need to create a workflow from scratch. The Nextflow community has created many pipelines that are highly reproducible, versioned, and utilize containers or Conda environments:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kos-danilov.github.io/posts/nf_core/pipelines.png" class="img-fluid figure-img"></p>
<figcaption>nf-core pipelines</figcaption>
</figure>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>You can ensure reproducibility by using a specific version of the pipeline. While there is sometimes limited flexibility in the tool parameters, you can address this by editing specific modules of the pipelines locally.</p>
</div>
</div>
<p>To configure the pipeline, you should consult the webpage of the corresponding workflow. However, in general, a few key items need to be set up before starting:</p>
<ul>
<li>Pipeline and version</li>
<li>Configuration profile for your executor</li>
<li>Workflow parameters (including input tables, etc.)</li>
</ul>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>These pipelines are the result of countless hours of open-source work and collaboration, so always remember to cite them properly.</p>
</div>
</div>
<p>There are many ways to learn more about Nextflow and the community:</p>
<ul>
<li><a href="https://nextflow.slack.com/join/shared_invite/zt-371z9ruz4-jh0KZkieJ2ZNIz2KhVDbFw#/shared-invite/email">Slack</a></li>
<li><a href="https://training.nextflow.io/latest/">Training</a></li>
<li><a href="https://seqera.io/ask-ai/chat?__hstc=247481240.7db821609d6685cac05bfd76bdd93c85.1759402646204.1760100401349.1760121036788.5&amp;__hssc=247481240.2.1760121036788&amp;__hsfp=1973734757">Sequera AI</a></li>
</ul>



 ]]></description>
  <category>nextflow</category>
  <category>nf-core</category>
  <guid>https://kos-danilov.github.io/posts/nf_core/</guid>
  <pubDate>Thu, 09 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://kos-danilov.github.io/posts/nf_core/image.png" medium="image" type="image/png" height="37" width="144"/>
</item>
<item>
  <title>Nextflow for pipeline managment</title>
  <dc:creator>Konstantin Danilov</dc:creator>
  <link>https://kos-danilov.github.io/posts/nextflow/</link>
  <description><![CDATA[ 





<p>Nextflow is a workflow management system that simplifies running complex data analyses across different environments including laptops, HPC clusters and the cloud.</p>
<p>Built on the dataflow programming model, it allows tasks to execute in parallel and ensures reproducibility and scalability.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Nextflow uses a <strong>dataflow programming model</strong>, where process execution is triggered by the availability of input data.<br>
Each process runs independently, enabling <strong>implicit parallelism</strong> and <strong>deterministic workflow behavior</strong>.</p>
</div>
</div>
<section id="defenitions" class="level2">
<h2 class="anchored" data-anchor-id="defenitions">Defenitions</h2>
<p>In Nextflow, workflows are built from two core components: processes and channels.</p>
<ul>
<li><p><strong>Processes</strong> define individual computational tasks, each has its own script, input, and output. They are isolated and can run in parallel.</p></li>
<li><p><strong>Channels</strong> are the data connectors between processes.<br>
They define how data moves through the workflow, enabling dynamic and asynchronous execution.</p></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://kos-danilov.github.io/posts/nextflow/channels_processes.png" class="img-fluid figure-img"></p>
<figcaption>Channels and processes</figcaption>
</figure>
</div>
<p>Chanel can be created using <a href="https://www.nextflow.io/docs/latest/reference/channel.html#channel-factory">channel factories</a> and modified during execution of the workdlow using <a href="https://www.nextflow.io/docs/latest/reference/operator.html#operator-page">operators</a></p>
</section>
<section id="workflow" class="level2">
<h2 class="anchored" data-anchor-id="workflow">Workflow</h2>
<p>Typical *.nf file looks like this:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env nextflow</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">//</span> Parameters <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Settings</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.reads</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/*.fastq"</span></span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.ref</span>   = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/genome.fa"</span></span>
<span id="cb1-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.outdir</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"results"</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">//</span> Imports <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Libraries</span></span>
<span id="cb1-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">include</span> { QC } from <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./modules/qc.nf'</span></span>
<span id="cb1-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">include</span> { ALIGN } from <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./modules/align.nf'</span></span>
<span id="cb1-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">include</span> { REPORT } from <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./modules/report.nf'</span></span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">//</span> Custom Functions</span>
<span id="cb1-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">def</span> sample_id<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb1-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path.baseName.replace</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.fastq'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">//</span> Processes</span>
<span id="cb1-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">process</span> PROCESS_NAME{</span>
<span id="cb1-20">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">//</span> directives</span>
<span id="cb1-21">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">container</span></span>
<span id="cb1-22">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">publishDir</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${params</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">.outdir</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/qc"</span>, mode: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'copy'</span></span>
<span id="cb1-23"></span>
<span id="cb1-24">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">input:</span></span>
<span id="cb1-25">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">val</span> x</span>
<span id="cb1-26">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">path</span> y</span>
<span id="cb1-27">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tuple</span> z</span>
<span id="cb1-28"></span>
<span id="cb1-29">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output:</span></span>
<span id="cb1-30">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tuple</span> val x, path f</span>
<span id="cb1-31">    </span>
<span id="cb1-32">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">script:</span></span>
<span id="cb1-33">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">//</span> can be a script from bin folder</span>
<span id="cb1-34">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fastqc</span> ...</span>
<span id="cb1-35"></span>
<span id="cb1-36"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-37"></span>
<span id="cb1-38"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb1-39"></span>
<span id="cb1-40"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">workflow</span> {</span>
<span id="cb1-41">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">//</span> Channel creation</span>
<span id="cb1-42">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Channel</span></span>
<span id="cb1-43">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.fromPath</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params.reads</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-44">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.map</span> { file <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> tuple<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sample_id</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> file<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-45">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.set</span> { reads_ch }</span>
<span id="cb1-46"></span>
<span id="cb1-47">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">//</span> workflow itself </span>
<span id="cb1-48">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">qc_results</span> = QC<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">reads_ch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-49">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bam_files</span>  = ALIGN<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">qc_results</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-50">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb1-51"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div></div>
<p>In order to run the script we need to have a specific version of the Nextflow pre-installed into enviroment. Following CLI interface can be used for running the pipeline:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nextflow</span> run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>pipeline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">options</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-2"> [--params-file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-3"> [--<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>param<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-4"> [-profile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>profile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-5"> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[-</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">resume</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-6"> [-with-docker<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-with-singularity]</span></span></code></pre></div></div>
<p>After execution nextflow create a lot of files in the work directory. These files can be reused using -resume option in case of repetitive executions. After some time work directory can be cleaned in a way:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nextflow</span> clean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>pipeline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">options</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> [--work-dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>] <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[-</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div></div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Read more about CLI nextflow commands <a href="https://www.nextflow.io/docs/latest/reference/cli.html">here</a></p>
</div>
</div>
</section>
<section id="comparison-with-other-pipeline-managers" class="level2">
<h2 class="anchored" data-anchor-id="comparison-with-other-pipeline-managers">Comparison with other pipeline managers</h2>
<p>One can choose between various workflow managers:</p>
<table class="caption-top table">
<colgroup>
<col style="width: 18%">
<col style="width: 28%">
<col style="width: 24%">
<col style="width: 27%">
</colgroup>
<thead>
<tr class="header">
<th>Feature</th>
<th>Nextflow</th>
<th>Snakemake</th>
<th>CWL (Common Workflow Language)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>Language</strong></td>
<td>Groovy</td>
<td>Python</td>
<td>YAML/JSON spec</td>
</tr>
<tr class="even">
<td><strong>Parallelism</strong></td>
<td>Dataflow (tasks run when input ready)</td>
<td>Explicit dependencies in rules</td>
<td>DAG (tasks run according to DAG)</td>
</tr>
<tr class="odd">
<td><strong>Reproducibility</strong></td>
<td>Excellent: containers &amp; caching</td>
<td>Very good: conda &amp; containers</td>
<td>High: strict spec &amp; container support</td>
</tr>
<tr class="even">
<td><strong>Where it runs</strong></td>
<td>Local, HPC, cloud, Kubernetes</td>
<td>Local, HPC (cloud possible)</td>
<td>HPC &amp; cloud via execution engines</td>
</tr>
<tr class="odd">
<td><strong>Containers</strong></td>
<td>Docker, Singularity, Podman</td>
<td>Docker, Singularity</td>
<td>Docker, Singularity</td>
</tr>
<tr class="even">
<td><strong>Ease of use</strong></td>
<td>Moderate (Groovy DSL learning curve)</td>
<td>Easy if you know Python</td>
<td>Steeper, verbose YAML</td>
</tr>
<tr class="odd">
<td><strong>Portability</strong></td>
<td>Very high</td>
<td>Medium</td>
<td>High</td>
</tr>
<tr class="even">
<td><strong>Community</strong></td>
<td>Big</td>
<td>Medium</td>
<td>???</td>
</tr>
</tbody>
</table>


</section>

 ]]></description>
  <category>nextflow</category>
  <category>containers</category>
  <guid>https://kos-danilov.github.io/posts/nextflow/</guid>
  <pubDate>Wed, 08 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://kos-danilov.github.io/posts/nextflow/image.png" medium="image" type="image/png" height="75" width="144"/>
</item>
<item>
  <title>Running reproducible analysis using pixi or containers for environment management</title>
  <dc:creator>Konstantin Danilov</dc:creator>
  <link>https://kos-danilov.github.io/posts/pixi_containers/</link>
  <description><![CDATA[ 





<p>Learn how to manage dependencies and share your analysis environment with others using pixi and containers.</p>
<section id="managing-environments-using-pixi" class="level2">
<h2 class="anchored" data-anchor-id="managing-environments-using-pixi">Managing environments using pixi</h2>
<p>Pixi is a modern, fast, and conda-compatible environment manager. It helps create isolated environments for your projects, handling dependencies across multiple programming languages. Key features include:</p>
<ul>
<li>Fast package installation and environment creation</li>
<li>Conda-compatible, accessing the same package ecosystem</li>
<li>Lockfile support for reproducible environments</li>
<li>Simple CLI interface with intuitive commands</li>
<li>Multi-language support (Python, R, C++, etc.)</li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>To get started with pixi, first install it following the <a href="https://prefix.dev/docs/pixi/installation">installation guide</a>.</p>
</div>
</div>
<section id="create-a-new-environment" class="level3">
<h3 class="anchored" data-anchor-id="create-a-new-environment">Create a new environment</h3>
<p>It is a good practice to have a separate env for every project. In order to configure a new env in the currect project directory use command:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> init <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> conda-forge <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> bioconda</span></code></pre></div></div>
<p>If you want to add something (for example fastqc) to the env use:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> add fastqc</span></code></pre></div></div>
<p>You can test it using:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> run fastqc <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span></span></code></pre></div></div>
<p>or by activating env:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pixi</span> shell</span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fastqc</span></span></code></pre></div></div>
</section>
<section id="alternatives" class="level3">
<h3 class="anchored" data-anchor-id="alternatives">Alternatives</h3>
<p>Of course there are several environment managers avaliable, you can check pros and cons of common ones in this table:</p>
<table class="caption-top table">
<colgroup>
<col style="width: 19%">
<col style="width: 41%">
<col style="width: 19%">
<col style="width: 19%">
</colgroup>
<thead>
<tr class="header">
<th>Tool</th>
<th>Description</th>
<th>Pros</th>
<th>Cons</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>conda</td>
<td>Package and environment manager for many programming languages</td>
<td>- Multi-language support<br>- Large package ecosystem<br>- Industry standard</td>
<td>- Slow resolver<br>- Heavy installation<br>- Complex dependency handling</td>
</tr>
<tr class="even">
<td>pixi</td>
<td>Fast conda-compatible environment manager</td>
<td>- Fast installation<br>- Lockfile support<br>- Conda-compatible</td>
<td>- Relatively new<br>- Smaller community<br>- Limited documentation</td>
</tr>
<tr class="odd">
<td>venv</td>
<td>Python built-in virtual environment tool</td>
<td>- Lightweight<br>- Built into Python<br>- Simple to use</td>
<td>- Python-only<br>- No dependency resolution<br>- Basic feature set</td>
</tr>
<tr class="even">
<td>virtualenv</td>
<td>Enhanced virtual environment tool</td>
<td>- Mature project<br>- Good integration<br>- Cross-platform</td>
<td>- Python-only<br>- Manual dependency management<br>- No lockfile by default</td>
</tr>
<tr class="odd">
<td>poetry</td>
<td>Modern Python dependency manager</td>
<td>- Modern workflow<br>- Good dependency resolver<br>- Project management</td>
<td>- Python-only<br>- Learning curve<br>- Can be slow</td>
</tr>
</tbody>
</table>
</section>
</section>
<section id="get-more-control-using-containers" class="level2">
<h2 class="anchored" data-anchor-id="get-more-control-using-containers">Get more control using containers</h2>
<p>Containers offer a higher level of isolation and reproducibility by packaging not just the dependencies, but the entire runtime environment. Two popular containerization solutions are:</p>
<ul>
<li><strong>Docker</strong>: Industry standard for containerization, suitable for development and testing
<ul>
<li>Creates lightweight, portable environments</li>
<li>Extensive ecosystem of pre-built images (Dockerhub)</li>
<li>Great for CI/CD pipelines</li>
</ul></li>
<li><strong>Singularity/Apptainer</strong>: Designed for HPC and scientific computing (no root required)
<ul>
<li>Better security model for shared systems</li>
<li>Native support for HPC workloads</li>
<li>Seamless conversion from Docker containers</li>
</ul></li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Since we don’t have root rights on our server, we’re going to use apptainers in connection with singularity images. But this is not a problem - we still can use Docker images after conversion to singularity.</p>
</div>
</div>
<section id="source" class="level3">
<h3 class="anchored" data-anchor-id="source">Source</h3>
<p>There are many ways how to get a container:</p>
<ol type="1">
<li>Pull from container registry (<a href="https://hub.docker.com/">DockerHub</a>)</li>
<li>Convert Docker image to Singularity</li>
<li>Build from definition file</li>
<li>Construct container using Wave (<a href="https://seqera.io/containers/">Sequera</a>)</li>
</ol>
</section>
<section id="creating-the-container" class="level3">
<h3 class="anchored" data-anchor-id="creating-the-container">Creating the container</h3>
<p>We can use the following command to create our first container:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apptainer</span> pull <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>name.sif<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>link_to_container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div></div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Note, it is better to use specific version in the file name.</p>
</div>
</div>
</section>
<section id="run-tools-within-a-container" class="level3">
<h3 class="anchored" data-anchor-id="run-tools-within-a-container">Run tools within a container</h3>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true" href="">Running ‘from the outside’</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false" href="">Running ‘from the inside’</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<p>Run the command inside the container (good for pipelines):</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apptainer</span> exec <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>name-of-container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>command<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div></div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<p>Run in interactive mode (good for debugging):</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apptainer</span> shell <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>name-of-container<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div></div>
</div>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>pixi</category>
  <category>containers</category>
  <category>apptainer</category>
  <guid>https://kos-danilov.github.io/posts/pixi_containers/</guid>
  <pubDate>Tue, 07 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://kos-danilov.github.io/posts/pixi_containers/image.png" medium="image" type="image/png" height="72" width="144"/>
</item>
<item>
  <title>How to make a quarto blog</title>
  <dc:creator>Konstantin Danilov</dc:creator>
  <link>https://kos-danilov.github.io/posts/make_blog/</link>
  <description><![CDATA[ 





<p>This post contains instruction about how to make your first post using Quarto blog.</p>
<section id="creating-a-new-blog" class="level2">
<h2 class="anchored" data-anchor-id="creating-a-new-blog">Creating a new blog</h2>
<ol type="1">
<li><p>Open VSCode</p></li>
<li><p>Create a new blog project:</p>
<ul>
<li>Press <code>Ctrl+Shift+P</code> (Windows/Linux) or <code>Cmd+Shift+P</code> (Mac)</li>
<li>Type “Quarto: Create Project”</li>
<li>Select “Blog Project”</li>
<li>Choose a directory for your blog</li>
<li>Enter a title for your blog</li>
</ul></li>
<li><p>Open the project:</p>
<ul>
<li>Go to <code>File &gt; Open Folder</code></li>
<li>Select your blog directory</li>
</ul></li>
<li><p>Preview your blog:</p>
<ul>
<li>Click the “Preview” button in the top right corner of VSCode</li>
<li>Or press <code>Ctrl+Shift+P</code> and type “Quarto: Preview”</li>
</ul></li>
</ol>
</section>
<section id="adding-a-new-post" class="level2">
<h2 class="anchored" data-anchor-id="adding-a-new-post">Adding a new post</h2>
<ol type="1">
<li><p>Create a new post:</p>
<ul>
<li>Right-click on the <code>posts</code> folder</li>
<li>Select “New Folder”</li>
<li>Name it (e.g., “my-first-post”)</li>
</ul></li>
<li><p>Create the post file:</p>
<ul>
<li>Right-click on your new folder</li>
<li>Select “New File”</li>
<li>Name it “index.qmd”</li>
</ul></li>
<li><p>Add YAML header to your post:</p>
<div class="code-copy-outer-scaffold"><div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"My Post Title"</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">author</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Your Name"</span></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2025-10-06"</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">categories</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">news</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> analysis</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb1-6"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div></div></li>
<li><p>Write your content using markdown</p></li>
<li><p>Preview changes:</p>
<ul>
<li>Click the “Preview” button in the top right corner</li>
<li>Or use Command Palette (Ctrl+Shift+P / Cmd+Shift+P) and type “Quarto: Preview”</li>
</ul></li>
</ol>
</section>
<section id="publishing" class="level2">
<h2 class="anchored" data-anchor-id="publishing">Publishing</h2>
<ol type="1">
<li><p>Render your post</p></li>
<li><p>Deploy to GitHub Pages or your preferred hosting service</p></li>
</ol>


</section>

 ]]></description>
  <category>quarto</category>
  <guid>https://kos-danilov.github.io/posts/make_blog/</guid>
  <pubDate>Mon, 06 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://kos-danilov.github.io/posts/make_blog/image.png" medium="image" type="image/png" height="144" width="144"/>
</item>
</channel>
</rss>
